grViz("
digraph flowchart {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
####### ####### ####### ####### ####### ####### NODES  ####### ####### ####### #######
####### RAW 'NODE' STATEMENTS ####### DB5353
node [shape = box,
fontname = Helvetica,
fillcolor = '#1B325F',
style = filled,
fontcolor = white]
'GSE13937_series_matrix.txt'; 'A-GEOD-8835.adf.txt'; 'A-GEOD-8835_comments.txt';
####### LOAD 'NODE' STATEMENTS  #######
#CSV #FFF6CD
node [shape = box,
fontname = Helvetica,
fillcolor = '#E9F2F9',
style = filled,
fontcolor = black]
'data_load.csv' 'probes_data_load.csv'
#NO CSV
node [shape = box,
fontname = Helvetica,
fillcolor = white,
style = filled]
raw_data ; 'raw_probes'; 'raw_comments';
####### CLEAN 'NODE' STATEMENTS  #######
node [shape = box,
fontname = Helvetica,
fillcolor = '#9CC4E4',
style = filled]
'data_clean.csv'
'probes_data_clean.csv'
######## AUGMENT 'NODE' STATEMENTS  #######
#CSV
node [shape = box,
fontname = Helvetica,
fillcolor = '#3A89C9',
stile = filled]
'data_aug_wide.csv'
'data_aug_long.csv'
#NO CSV
node [shape = box,
fontname = Helvetica,
fillcolor = white,
style = filled]
data_aug
######## RESULTS NODE  #######
node [shape = box,
fontname = Helvetica,
style = filled]
'Results and visualizations' [fillcolor = '#F26C4F']
####### ####### ############### 'EDGE' STATEMENTS  ####### ####### ####### #######
#Raw - load
'GSE13937_series_matrix.txt' -> raw_data [label='', fontsize=15, fontname = Helvetica, fontcolor='#131A37']
raw_data -> 'data_load.csv' [color='#131A37']
'A-GEOD-8835.adf.txt' -> 'raw_probes'
'A-GEOD-8835_comments.txt' -> 'raw_comments'
{'raw_probes' 'raw_comments'} -> 'probes_data_load.csv'
#Load - clean
'data_load.csv' -> 'data_clean.csv'
'probes_data_load.csv' -> 'probes_data_clean.csv'
#Clean - augmented
'data_clean.csv' -> data_aug
{data_aug 'probes_data_clean.csv'} -> 'data_aug_wide.csv'
'data_aug_long.csv' -> 'data_aug_wide.csv'
'data_aug_wide.csv' -> 'data_aug_long.csv'
#Augmented - Visualizations
{'data_aug_wide.csv'} -> 'Results and visualizations'
{ rank = same; 'GSE13937_series_matrix.txt'; 'A-GEOD-8835.adf.txt'; 'A-GEOD-8835_comments.txt' }
{ rank = same; 'data_clean.csv'; 'probes_data_clean.csv' }
{ rank = same; 'data_aug_wide.csv'; 'data_aug_long.csv' }
}
")
```
## Results
```{r cars, echo = TRUE}
summary(cars)
```
## Results
## Results
## Results
## Discussion
```{r pressure}
plot(pressure)
```
## Discussion
grViz_object %>%
export_svg() %>%
charToRaw %>%
rsvg_pdf("./results.svg")
grViz_object %>%
export_svg() %>%
charToRaw %>%
rsvg_png("./results.svg")
grViz_object %>%
export_svg() %>%
charToRaw %>%
rsvg_png(file="./results.svg")
library(rsvg)
grViz_object %>%
export_svg() %>%
charToRaw %>%
rsvg_png(file="./results.svg")
export_svg
export_svg?
?export_svg
?export_svg
??export_svg
# 1. Make a play graph
tmp = DiagrammeR::grViz('digraph{a->b; c->a; c->b; c->d;}')
# 2. Convert to SVG, then save as png
tmp = DiagrammeRsvg::export_svg(tmp)
tmp = charToRaw(tmp) # flatten
rsvg::rsvg_png(tmp, "./results.svg") # saved graph as png in current working directory
# 1. Make a play graph
tmp = DiagrammeR::grViz('digraph{a->b; c->a; c->b; c->d;}')
# 2. Convert to SVG, then save as png
tmp = DiagrammeRsvg::export_svg(tmp)
tmp = charToRaw(tmp) # flatten
rsvg::rsvg_png(tmp, "g.png") # saved graph as png in current working directory
---
title: "Group 11 presentation"
# subtitle: "MiRNA expression in squamous cell carcinoma and adenocarcinoma of the esophagus and associations with survival"
author: "Dalsberg JÃ¸rgensen, Jonas; Gutierrez Leon, Alvaro; Hoang Viet Minh Pham, Jake; Romero Yianni, Daniel"
date: "5/7/2022"
output:
ioslides_presentation:
font-family: 'Helvetica'
#widescreen: true
#smaller: true
---
<style type="text/css">
body p {
color: #000000;
}
</style>
slides > slide.backdrop {
background: white;
}
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
library(DiagrammeR)
library(tidyverse)
library(DiagrammeRsvg)  # for conversion to svg
library(rsvg)  # for saving svg
```
## Introduction
- **Dataset source:** MiRNA expression in squamous cell carcinoma and adenocarcinoma of the esophagus and associations with survival.
<br>
- **Objective of the project:** To reproduce the findings of the authors and elaborate on their visualizations.
## Materials and Methods
### Patient data:
- **GSE13937_series_matrix.txt**
<br>
- National Center for Biotechnology Information website   (https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE13937)
<br>
### Microarray information:
- **A-GEOD-8835.adf.txt** and **A-GEOD-8835_comments.txt**
- European Bioinformatics Institute website (https://www.ebi.ac.uk/arrayexpress/arrays/A-GEOD-8835/)
## Materials and Methods
### Flowchart of the data wrangling
```{r}
flowchart <- grViz("
digraph flowchart {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
####### ####### ####### ####### ####### ####### NODES  ####### ####### ####### #######
####### RAW 'NODE' STATEMENTS ####### DB5353
node [shape = box,
fontname = Helvetica,
fillcolor = '#1B325F',
style = filled,
fontcolor = white]
'GSE13937_series_matrix.txt'; 'A-GEOD-8835.adf.txt'; 'A-GEOD-8835_comments.txt';
####### LOAD 'NODE' STATEMENTS  #######
#CSV #FFF6CD
node [shape = box,
fontname = Helvetica,
fillcolor = '#E9F2F9',
style = filled,
fontcolor = black]
'data_load.csv' 'probes_data_load.csv'
#NO CSV
node [shape = box,
fontname = Helvetica,
fillcolor = white,
style = filled]
raw_data ; 'raw_probes'; 'raw_comments';
####### CLEAN 'NODE' STATEMENTS  #######
node [shape = box,
fontname = Helvetica,
fillcolor = '#9CC4E4',
style = filled]
'data_clean.csv'
'probes_data_clean.csv'
######## AUGMENT 'NODE' STATEMENTS  #######
#CSV
node [shape = box,
fontname = Helvetica,
fillcolor = '#3A89C9',
stile = filled]
'data_aug_wide.csv'
'data_aug_long.csv'
#NO CSV
node [shape = box,
fontname = Helvetica,
fillcolor = white,
style = filled]
data_aug
######## RESULTS NODE  #######
node [shape = box,
fontname = Helvetica,
style = filled]
'Results and visualizations' [fillcolor = '#F26C4F']
####### ####### ############### 'EDGE' STATEMENTS  ####### ####### ####### #######
#Raw - load
'GSE13937_series_matrix.txt' -> raw_data [label='', fontsize=15, fontname = Helvetica, fontcolor='#131A37']
raw_data -> 'data_load.csv' [color='#131A37']
'A-GEOD-8835.adf.txt' -> 'raw_probes'
'A-GEOD-8835_comments.txt' -> 'raw_comments'
{'raw_probes' 'raw_comments'} -> 'probes_data_load.csv'
#Load - clean
'data_load.csv' -> 'data_clean.csv'
'probes_data_load.csv' -> 'probes_data_clean.csv'
#Clean - augmented
'data_clean.csv' -> data_aug
{data_aug 'probes_data_clean.csv'} -> 'data_aug_wide.csv'
'data_aug_long.csv' -> 'data_aug_wide.csv'
'data_aug_wide.csv' -> 'data_aug_long.csv'
#Augmented - Visualizations
{'data_aug_wide.csv'} -> 'Results and visualizations'
{ rank = same; 'GSE13937_series_matrix.txt'; 'A-GEOD-8835.adf.txt'; 'A-GEOD-8835_comments.txt' }
{ rank = same; 'data_clean.csv'; 'probes_data_clean.csv' }
{ rank = same; 'data_aug_wide.csv'; 'data_aug_long.csv' }
}
")
flowchart = DiagrammeRsvg::export_svg(flowchart)
flowchart = charToRaw(flowchart)
rsvg::rsvg_png(flowchart, "flowchart.png") # saved graph as png in current working directory
```
## Results
```{r cars, echo = TRUE}
summary(cars)
```
## Results
## Results
## Results
## Discussion
```{r pressure}
plot(pressure)
```
## Discussion
knitr::opts_chunk$set(echo = FALSE)
library(DiagrammeR)
library(tidyverse)
library(DiagrammeRsvg)  # for conversion to svg
library(rsvg)  # for saving svg
flowchart <- grViz("
digraph flowchart {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
####### ####### ####### ####### ####### ####### NODES  ####### ####### ####### #######
####### RAW 'NODE' STATEMENTS ####### DB5353
node [shape = box,
fontname = Helvetica,
fillcolor = '#1B325F',
style = filled,
fontcolor = white]
'GSE13937_series_matrix.txt'; 'A-GEOD-8835.adf.txt'; 'A-GEOD-8835_comments.txt';
####### LOAD 'NODE' STATEMENTS  #######
#CSV #FFF6CD
node [shape = box,
fontname = Helvetica,
fillcolor = '#E9F2F9',
style = filled,
fontcolor = black]
'data_load.csv' 'probes_data_load.csv'
#NO CSV
node [shape = box,
fontname = Helvetica,
fillcolor = white,
style = filled]
raw_data ; 'raw_probes'; 'raw_comments';
####### CLEAN 'NODE' STATEMENTS  #######
node [shape = box,
fontname = Helvetica,
fillcolor = '#9CC4E4',
style = filled]
'data_clean.csv'
'probes_data_clean.csv'
######## AUGMENT 'NODE' STATEMENTS  #######
#CSV
node [shape = box,
fontname = Helvetica,
fillcolor = '#3A89C9',
stile = filled]
'data_aug_wide.csv'
'data_aug_long.csv'
#NO CSV
node [shape = box,
fontname = Helvetica,
fillcolor = white,
style = filled]
data_aug
######## RESULTS NODE  #######
node [shape = box,
fontname = Helvetica,
style = filled]
'Results and visualizations' [fillcolor = '#F26C4F']
####### ####### ############### 'EDGE' STATEMENTS  ####### ####### ####### #######
#Raw - load
'GSE13937_series_matrix.txt' -> raw_data [label='', fontsize=15, fontname = Helvetica, fontcolor='#131A37']
raw_data -> 'data_load.csv' [color='#131A37']
'A-GEOD-8835.adf.txt' -> 'raw_probes'
'A-GEOD-8835_comments.txt' -> 'raw_comments'
{'raw_probes' 'raw_comments'} -> 'probes_data_load.csv'
#Load - clean
'data_load.csv' -> 'data_clean.csv'
'probes_data_load.csv' -> 'probes_data_clean.csv'
#Clean - augmented
'data_clean.csv' -> data_aug
{data_aug 'probes_data_clean.csv'} -> 'data_aug_wide.csv'
'data_aug_long.csv' -> 'data_aug_wide.csv'
'data_aug_wide.csv' -> 'data_aug_long.csv'
#Augmented - Visualizations
{'data_aug_wide.csv'} -> 'Results and visualizations'
{ rank = same; 'GSE13937_series_matrix.txt'; 'A-GEOD-8835.adf.txt'; 'A-GEOD-8835_comments.txt' }
{ rank = same; 'data_clean.csv'; 'probes_data_clean.csv' }
{ rank = same; 'data_aug_wide.csv'; 'data_aug_long.csv' }
}
")
flowchart = export_svg(flowchart)
flowchart = charToRaw(flowchart)
rsvg_png(flowchart, "flowchart.png") # saved graph as png in current working directory
flowchart <- grViz("
digraph flowchart {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
####### ####### ####### ####### ####### ####### NODES  ####### ####### ####### #######
####### RAW 'NODE' STATEMENTS ####### DB5353
node [shape = box,
fontname = Helvetica,
fillcolor = '#1B325F',
style = filled,
fontcolor = white]
'GSE13937_series_matrix.txt'; 'A-GEOD-8835.adf.txt'; 'A-GEOD-8835_comments.txt';
####### LOAD 'NODE' STATEMENTS  #######
#CSV #FFF6CD
node [shape = box,
fontname = Helvetica,
fillcolor = '#E9F2F9',
style = filled,
fontcolor = black]
'data_load.csv' 'probes_data_load.csv'
#NO CSV
node [shape = box,
fontname = Helvetica,
fillcolor = white,
style = filled]
raw_data ; 'raw_probes'; 'raw_comments';
####### CLEAN 'NODE' STATEMENTS  #######
node [shape = box,
fontname = Helvetica,
fillcolor = '#9CC4E4',
style = filled]
'data_clean.csv'
'probes_data_clean.csv'
######## AUGMENT 'NODE' STATEMENTS  #######
#CSV
node [shape = box,
fontname = Helvetica,
fillcolor = '#3A89C9',
stile = filled]
'data_aug_wide.csv'
'data_aug_long.csv'
#NO CSV
node [shape = box,
fontname = Helvetica,
fillcolor = white,
style = filled]
data_aug
######## RESULTS NODE  #######
node [shape = box,
fontname = Helvetica,
style = filled]
'Results and visualizations' [fillcolor = '#F26C4F']
####### ####### ############### 'EDGE' STATEMENTS  ####### ####### ####### #######
#Raw - load
'GSE13937_series_matrix.txt' -> raw_data [label='', fontsize=15, fontname = Helvetica, fontcolor='#131A37']
raw_data -> 'data_load.csv' [color='#131A37']
'A-GEOD-8835.adf.txt' -> 'raw_probes'
'A-GEOD-8835_comments.txt' -> 'raw_comments'
{'raw_probes' 'raw_comments'} -> 'probes_data_load.csv'
#Load - clean
'data_load.csv' -> 'data_clean.csv'
'probes_data_load.csv' -> 'probes_data_clean.csv'
#Clean - augmented
'data_clean.csv' -> data_aug
{data_aug 'probes_data_clean.csv'} -> 'data_aug_wide.csv'
'data_aug_long.csv' -> 'data_aug_wide.csv'
'data_aug_wide.csv' -> 'data_aug_long.csv'
#Augmented - Visualizations
{'data_aug_wide.csv'} -> 'Results and visualizations'
{ rank = same; 'GSE13937_series_matrix.txt'; 'A-GEOD-8835.adf.txt'; 'A-GEOD-8835_comments.txt' }
{ rank = same; 'data_clean.csv'; 'probes_data_clean.csv' }
{ rank = same; 'data_aug_wide.csv'; 'data_aug_long.csv' }
}
")
flowchart = export_svg(flowchart)
flowchart = charToRaw(flowchart)
rsvg_png(flowchart, "flowchart.png") # saved graph as png in current working directory
flowchart <- grViz("
digraph flowchart {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
####### ####### ####### ####### ####### ####### NODES  ####### ####### ####### #######
####### RAW 'NODE' STATEMENTS ####### DB5353
node [shape = box,
fontname = Helvetica,
fillcolor = '#1B325F',
style = filled,
fontcolor = white]
'GSE13937_series_matrix.txt'; 'A-GEOD-8835.adf.txt'; 'A-GEOD-8835_comments.txt';
####### LOAD 'NODE' STATEMENTS  #######
#CSV #FFF6CD
node [shape = box,
fontname = Helvetica,
fillcolor = '#E9F2F9',
style = filled,
fontcolor = black]
'data_load.csv' 'probes_data_load.csv'
#NO CSV
node [shape = box,
fontname = Helvetica,
fillcolor = white,
style = filled]
raw_data ; 'raw_probes'; 'raw_comments';
####### CLEAN 'NODE' STATEMENTS  #######
node [shape = box,
fontname = Helvetica,
fillcolor = '#9CC4E4',
style = filled]
'data_clean.csv'
'probes_data_clean.csv'
######## AUGMENT 'NODE' STATEMENTS  #######
#CSV
node [shape = box,
fontname = Helvetica,
fillcolor = '#3A89C9',
stile = filled]
'data_aug_wide.csv'
'data_aug_long.csv'
#NO CSV
node [shape = box,
fontname = Helvetica,
fillcolor = white,
style = filled]
data_aug
######## RESULTS NODE  #######
node [shape = box,
fontname = Helvetica,
style = filled]
'Results and visualizations' [fillcolor = '#F26C4F']
####### ####### ############### 'EDGE' STATEMENTS  ####### ####### ####### #######
#Raw - load
'GSE13937_series_matrix.txt' -> raw_data [label='', fontsize=15, fontname = Helvetica, fontcolor='#131A37']
raw_data -> 'data_load.csv' [color='#131A37']
'A-GEOD-8835.adf.txt' -> 'raw_probes'
'A-GEOD-8835_comments.txt' -> 'raw_comments'
{'raw_probes' 'raw_comments'} -> 'probes_data_load.csv'
#Load - clean
'data_load.csv' -> 'data_clean.csv'
'probes_data_load.csv' -> 'probes_data_clean.csv'
#Clean - augmented
'data_clean.csv' -> data_aug
{data_aug 'probes_data_clean.csv'} -> 'data_aug_wide.csv'
'data_aug_long.csv' -> 'data_aug_wide.csv'
'data_aug_wide.csv' -> 'data_aug_long.csv'
#Augmented - Visualizations
{'data_aug_wide.csv'} -> 'Results and visualizations'
{ rank = same; 'GSE13937_series_matrix.txt'; 'A-GEOD-8835.adf.txt'; 'A-GEOD-8835_comments.txt' }
{ rank = same; 'data_clean.csv'; 'probes_data_clean.csv' }
{ rank = same; 'data_aug_wide.csv'; 'data_aug_long.csv' }
}
")
flowchart = export_svg(flowchart)
flowchart = charToRaw(flowchart)
rsvg_png(flowchart, "flowchart.png") # saved graph as png in current working directory
library(magick)
install.packages('magick')
library(magick)
logo <- image_read("flowchart.png")
image_transparent(logo, 'white')
image_transparent("./results/flowchart.png", 'white')
image <- image_read(""./results/flowchart.png"")
image <- image_read("./results/flowchart.png")
image <- image_read("./doc/flowchart.png")
image_transparent("./results/flowchart.png", 'white')
image_transparent("image, 'white')
image_transparent("image, 'white')
image_transparent("image, 'white')
image <- image_read("./doc/flowchart.png")
image_transparent(image, 'white')
image_transparent(image, 'white')
!(./results/flowchart.png)
!("./results/flowchart.png")
![an image caption Source: Ultimate Funny Dog Videos Compilation 2013.]("./results/flowchart.png")
![some caption](flowchart.png)
![some caption]("flowchart.png")
![some caption]("./flowchart.png")
![some caption]("./doc/flowchart.png")
